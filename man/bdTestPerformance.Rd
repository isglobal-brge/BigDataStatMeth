% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{bdTestPerformance}
\alias{bdTestPerformance}
\title{Quick performance test for current thread configuration}
\usage{
bdTestPerformance(
  test_size = 2000L,
  operation_type = "multiplication",
  iterations = 3L
)
}
\arguments{
\item{test_size}{Size of test matrix (default: 2000)}

\item{operation_type}{Type of operation to test (default: "multiplication")}

\item{iterations}{Number of iterations to average (default: 3)}
}
\value{
List with timing results and performance metrics
}
\description{
Performs a simple matrix operation to test the performance
of the current thread configuration. Useful for measuring
the impact of I/O-aware optimization and comparing different
configurations.
}
\details{
The test performs matrix operations using the current OpenMP configuration
and provides benchmarks for computational performance. Available test types:
\itemize{
\item "multiplication" - Matrix multiplication benchmark
\item "crossprod" - Cross-product benchmark
\item "svd" - SVD decomposition benchmark (smaller matrices recommended)
}

Results include timing statistics, thread efficiency metrics, and
recommendations for optimization.
}
\note{
\itemize{
\item Larger test sizes provide more stable timing but take longer
\item Results may vary between runs due to system load
\item This test uses in-memory matrices, not HDF5 I/O
\item SVD tests should use smaller matrices (test_size < 1000)
}
}
\examples{
# Test current performance
results <- bdTestPerformance()
print(results)

# Compare different configurations
before <- bdTestPerformance()
bdConfigureIO(5000, 5000, "multiplication")
after <- bdTestPerformance()

# Compare results
improvement <- before$mean_time_ms / after$mean_time_ms
cat("Performance improvement:", improvement, "x\n")

# Test with different operations
mult_test <- bdTestPerformance(test_size = 2000, operation_type = "multiplication")
crossprod_test <- bdTestPerformance(test_size = 2000, operation_type = "crossprod")
svd_test <- bdTestPerformance(test_size = 500, operation_type = "svd")
}
