% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{bdConfigureIO}
\alias{bdConfigureIO}
\title{Configure BigDataStatMeth with I/O-aware optimization}
\usage{
bdConfigureIO(
  matrix_rows,
  matrix_cols,
  operation_type = "multiplication",
  enable_storage_benchmark = FALSE,
  verbose = FALSE
)
}
\arguments{
\item{matrix_rows}{Typical number of rows in your matrices}

\item{matrix_cols}{Typical number of columns in your matrices}

\item{operation_type}{Primary operation type you'll be using (default: "multiplication")}

\item{enable_storage_benchmark}{Enable storage benchmarking for accurate detection}

\item{verbose}{Print detailed configuration information}
}
\description{
Applies optimal OpenMP configuration for your typical workload.
This sets the thread count and OpenMP parameters for the current R session
based on intelligent analysis of your matrix size, operation type,
storage characteristics, and system capabilities.
}
\details{
This function:
\itemize{
\item Calculates optimal thread count using I/O-aware analysis
\item Applies OpenMP thread configuration (omp_set_num_threads)
\item Sets appropriate OpenMP scheduling policy
\item Disables dynamic thread adjustment for consistent performance
\item Configures thread affinity settings when beneficial
\item Provides detailed feedback about applied settings
}

The configuration persists for the current R session and affects
all subsequent BigDataStatMeth operations and other OpenMP code.
}
\note{
Call this function once at the beginning of your analysis session
This modifies global OpenMP settings which may affect
other packages using OpenMP in the same R session
}
\examples{
# Configure for matrix multiplication workload
bdConfigureIO(5000, 5000, "multiplication")

# Configure for SVD operations with detailed output
bdConfigureIO(10000, 8000, "svd", verbose = TRUE)

# Configure with accurate storage detection
bdConfigureIO(5000, 5000, "multiplication", enable_storage_benchmark = TRUE)

# Now your BigDataStatMeth operations will use optimal settings
result <- bdblockmult_hdf5("data.h5", "matrices", "A", "B")
}
