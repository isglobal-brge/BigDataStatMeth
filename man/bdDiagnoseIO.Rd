% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{bdDiagnoseIO}
\alias{bdDiagnoseIO}
\title{Diagnose I/O performance for BigDataStatMeth operations}
\usage{
bdDiagnoseIO(
  matrix_rows,
  matrix_cols,
  operation_type = "multiplication",
  enable_storage_benchmark = FALSE
)
}
\arguments{
\item{matrix_rows}{Number of rows in your matrix}

\item{matrix_cols}{Number of columns in your matrix}

\item{operation_type}{Type of BigDataStatMeth operation}

\item{enable_storage_benchmark}{Enable I/O benchmarking for accurate storage detection}
}
\description{
Analyzes your matrix size and operation to show the I/O-aware
thread optimization strategy and expected performance impact.
This function provides detailed system analysis including storage
detection, I/O intensity calculation, and optimization reasoning.
}
\details{
Supported operation types:
\itemize{
\item "multiplication", "bdblockmult" - Matrix multiplication (A \\%\emph{\\% B)
\item "svd", "bdSVD" - Singular Value Decomposition
\item "crossprod", "bdCrossprod" - Cross-product (t(A) \\%}\\% A)
\item "tcrossprod", "bdtCrossprod" - Transpose cross-product (A \\%*\\% t(A))
\item "pca", "bdPCA" - Principal Component Analysis
\item "qr", "bdQR" - QR decomposition
\item "eigen", "bdEigen" - Eigenvalue decomposition
}

The analysis includes:
\itemize{
\item Storage type detection (HDD/SSD/NVMe/Network)
\item I/O intensity ratio calculation
\item System type identification (HPC/Server/Desktop/Container)
\item Memory constraint analysis
\item Thread recommendation with detailed reasoning
\item Expected performance improvement estimates
}
}
\examples{
# Diagnose your specific workload
bdDiagnoseIO(5000, 5000, "multiplication")

# Check different operations
bdDiagnoseIO(10000, 8000, "svd")
bdDiagnoseIO(5000, 5000, "crossprod")

# Enable storage benchmarking for accurate detection
bdDiagnoseIO(5000, 5000, "multiplication", enable_storage_benchmark = TRUE)
}
