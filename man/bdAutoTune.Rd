% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{bdAutoTune}
\alias{bdAutoTune}
\title{Auto-tune I/O optimization for specific dataset}
\usage{
bdAutoTune(
  sample_rows = 1000L,
  sample_cols = 1000L,
  operation_type = "multiplication",
  max_threads = NULL,
  test_iterations = 2L
)
}
\arguments{
\item{sample_rows}{Number of rows to use for testing (default: 1000)}

\item{sample_cols}{Number of columns to use for testing (default: 1000)}

\item{operation_type}{Primary operation type to optimize for}

\item{max_threads}{Maximum threads to test (default: all available)}

\item{test_iterations}{Number of iterations per thread count (default: 2)}
}
\value{
List with optimal configuration and benchmarking results
}
\description{
Automatically determines optimal thread configuration by analyzing
a sample of your actual data. This provides more accurate optimization
than estimates based on matrix size alone.
}
\details{
This function performs empirical testing with different thread counts
to find the optimal configuration for your specific workload and system.
The testing process:
\itemize{
\item Tests thread counts from 1 to max_threads
\item Measures actual performance for each configuration
\item Identifies the optimal thread count based on throughput
\item Applies the optimal configuration automatically
\item Returns detailed benchmarking results
}
}
\note{
This function modifies global OpenMP settings and may take
several minutes to complete depending on the test parameters
}
\examples{
# Auto-tune for matrix multiplication
results <- bdAutoTune(operation_type = "multiplication")

# Auto-tune with specific constraints
results <- bdAutoTune(sample_rows = 2000, sample_cols = 2000,
                     operation_type = "svd", max_threads = 16)

# View results
print(results$optimal_threads)
plot(results$thread_counts, results$performance_scores)
}
